import data.*
String jname = "$WORKSPACE/data/environment.properties"
Properties props = new Properties()
File propsFile = new File(jname)
props.load(propsFile.newDataInputStream())
println props.getProperty('Env')
def AppName1 = props.getProperty('AppName')
def GitNam = props.getProperty('GitName')
def AppType = props.getProperty('AppType')
def GitName = "https://github.com/mahesh288646/$GitNam"
//def GitName = "https://github.com/mahesh288646/SimpleMaven1.git"
println props.getProperty('AppName')

if ('String $AppType==SpringBoot')
{
println("This is springboot space")
multibranchPipelineJob("$AppName1") {
    branchSources {
        git {
            id('12121213') // IMPORTANT: use a constant and unique identifier mahesh
            remote("$GitName")
            credentialsId('Git-ID')

        }
    }
    orphanedItemStrategy {
        discardOldItems {
            numToKeep(0)
        }
    }

	triggers {
//dos("sample") {}
//job('example') {
    steps {
        nodejsCommand('console.log("Hello World!")', 'Node 0.12.0')
		  }
//				}
			}

}
} else
if ($AppType==Angular)
{
println("This is Angular space")
multibranchPipelineJob("$AppName1") {
    branchSources {
        git {
            id('12121212') // IMPORTANT: use a constant and unique identifier mahesh
            remote("$GitName")
            credentialsId('Git-ID')

        }
    }
    orphanedItemStrategy {
        discardOldItems {
            numToKeep(0)
        }
    }
}
} 
//Mahesh
//trigger("Deployment")
//{
//triggerWithNoParameters(true)
//}